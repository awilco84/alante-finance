{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\finance-tracker\\\\client\\\\src\\\\pages\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Upload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [preview, setPreview] = useState([]);\n  const [totalRows, setTotalRows] = useState(0);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [fullData, setFullData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  // Updated columnMap to include two amount fields.\n  const [columnMap, setColumnMap] = useState({\n    date: '',\n    description: '',\n    amount1: '',\n    // used for credit or the sole amount column\n    amount2: '',\n    // optional; used for debit if applicable\n    category: ''\n  });\n  const [members, setMembers] = useState([]);\n  useEffect(() => {\n    const fetchMembers = async () => {\n      try {\n        const res = await axios.get('/api/household');\n        setMembers(res.data);\n      } catch (err) {\n        console.error('Failed to fetch members', err);\n      }\n    };\n    fetchMembers();\n  }, []);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return;\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      var _res$data$preview$;\n      const res = await axios.post('/api/transactions/upload', formData);\n      // Add a blank member field for each row in the full data\n      const enriched = res.data.fullData.map(row => ({\n        ...row,\n        member: ''\n      }));\n      setPreview(res.data.preview);\n      setFullData(enriched);\n      setTotalRows(res.data.totalRows);\n\n      // Get headers from the first preview row if available\n      const firstRow = ((_res$data$preview$ = res.data.preview[0]) === null || _res$data$preview$ === void 0 ? void 0 : _res$data$preview$.raw) || {};\n      setHeaders(Object.keys(firstRow));\n      setError('');\n      setSuccessMessage('');\n    } catch (err) {\n      console.error(err);\n      setError('Upload failed. Check CSV format and try again.');\n    }\n  };\n  const handleMemberChange = (index, memberId) => {\n    const updated = [...fullData];\n    updated[index].member = memberId;\n    setFullData(updated);\n  };\n  const handleSaveAll = async () => {\n    try {\n      const res = await axios.post('/api/transactions/batch', {\n        transactions: fullData.map(row => {\n          // For the amount, we use the following logic:\n          // If the user mapped a second amount column (amount2), assume it holds a debit value.\n          // Only one of the columns will have a value.\n          // Otherwise, use the value from amount1 as is.\n          let amount;\n          if (columnMap.amount2) {\n            const credit = parseFloat(row.raw[columnMap.amount1] || 0);\n            const debit = parseFloat(row.raw[columnMap.amount2] || 0);\n            // Since only one column should have a number, choose the non-zero value and return its absolute value.\n            amount = credit ? Math.abs(credit) : Math.abs(debit);\n          } else {\n            // Single column: take its absolute value.\n            amount = Math.abs(parseFloat(row.raw[columnMap.amount1] || 0));\n          }\n          const tx = {\n            date: row.raw[columnMap.date],\n            description: row.raw[columnMap.description],\n            amount: amount,\n            category: row.raw[columnMap.category] || 'Uncategorized',\n            // Use row.match for type fallback, defaulting to \"Uncategorized\"\n            type: row.match || 'Uncategorized',\n            notes: ''\n          };\n\n          // Add member if valid (24-character hex string)\n          if (row.member && /^[a-f\\d]{24}$/i.test(row.member)) {\n            tx.member = row.member;\n          }\n          return tx;\n        })\n      });\n      setSuccessMessage(res.data.message);\n      setError('');\n    } catch (err) {\n      console.error(err);\n      setError('Failed to save transactions.');\n      setSuccessMessage('');\n    }\n  };\n\n  // Check that the mandatory mapping fields are complete.\n  const isMappingComplete = columnMap.date && columnMap.description && columnMap.amount1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-white flex-col text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Upload Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange,\n      className: \"mb-4 text-gray-200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      className: \"bg-red-800 text-white px-4 py-2 rounded hover:bg-red-900 hover:shadow-lg transition duration-300 ease-in-out\",\n      children: \"Upload & Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), headers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-semibold\",\n        children: \"Map Columns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), ['date', 'description', 'category'].map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"w-24 capitalize\",\n          children: [field, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: columnMap[field],\n          onChange: e => setColumnMap({\n            ...columnMap,\n            [field]: e.target.value\n          }),\n          className: \"border px-2 py-1 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Column --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this), headers.map(header => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: header,\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, field, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"w-24 capitalize\",\n          children: \"Amount 1:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: columnMap.amount1,\n          onChange: e => setColumnMap({\n            ...columnMap,\n            amount1: e.target.value\n          }),\n          className: \"border px-2 py-1 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Credit Column --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), headers.map(header => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: header,\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"w-24 capitalize\",\n          children: \"Amount 2:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: columnMap.amount2,\n          onChange: e => setColumnMap({\n            ...columnMap,\n            amount2: e.target.value\n          }),\n          className: \"border px-2 py-1 rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Debit Column (Optional) --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), headers.map(header => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: header,\n            children: header\n          }, header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mt-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-600 mt-4\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 26\n    }, this), preview.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-medium text-gray-700\",\n        children: [\"Showing preview of first \", preview.length, \" rows (of \", totalRows, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"w-full border mt-2 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"bg-gray-200 text-left\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 border\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 border\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 border\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 border\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"p-2 border\",\n              children: \"Matched Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: preview.map((row, i) => {\n            var _row$raw, _row$raw2, _row$raw3, _row$raw4, _row$raw5, _row$raw6;\n            const credit = parseFloat(((_row$raw = row.raw) === null || _row$raw === void 0 ? void 0 : _row$raw[columnMap.amount1]) || 0);\n            const debit = parseFloat(((_row$raw2 = row.raw) === null || _row$raw2 === void 0 ? void 0 : _row$raw2[columnMap.amount2]) || 0);\n            // When two columns are mapped, use the nonzero (absolute) value.\n            // If only one column is mapped, take the absolute value.\n            const computedAmount = columnMap.amount2 ? credit ? Math.abs(credit) : Math.abs(debit) : Math.abs(parseFloat(((_row$raw3 = row.raw) === null || _row$raw3 === void 0 ? void 0 : _row$raw3[columnMap.amount1]) || 0));\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: (_row$raw4 = row.raw) !== null && _row$raw4 !== void 0 && _row$raw4[columnMap.date] ? new Date(row.raw[columnMap.date]).toLocaleDateString() : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: ((_row$raw5 = row.raw) === null || _row$raw5 === void 0 ? void 0 : _row$raw5[columnMap.description]) || 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: isNaN(computedAmount) ? 'N/A' : computedAmount.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: ((_row$raw6 = row.raw) === null || _row$raw6 === void 0 ? void 0 : _row$raw6[columnMap.category]) || 'Uncategorized'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"p-2 border\",\n                children: row.match || 'Uncategorized'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveAll,\n          disabled: !isMappingComplete,\n          className: `px-4 py-2 rounded text-white ${isMappingComplete ? 'bg-green-600 hover:bg-green-700' : 'bg-gray-400 cursor-not-allowed'}`,\n          children: \"Save All Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"VrbZ+cSDDYMoJ+/mhOOO29a58gk=\");\n_c = Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Upload","_s","file","setFile","preview","setPreview","totalRows","setTotalRows","error","setError","successMessage","setSuccessMessage","fullData","setFullData","headers","setHeaders","columnMap","setColumnMap","date","description","amount1","amount2","category","members","setMembers","fetchMembers","res","get","data","err","console","handleFileChange","e","target","files","handleUpload","formData","FormData","append","_res$data$preview$","post","enriched","map","row","member","firstRow","raw","Object","keys","handleMemberChange","index","memberId","updated","handleSaveAll","transactions","amount","credit","parseFloat","debit","Math","abs","tx","type","match","notes","test","message","isMappingComplete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","length","field","value","header","i","_row$raw","_row$raw2","_row$raw3","_row$raw4","_row$raw5","_row$raw6","computedAmount","Date","toLocaleDateString","isNaN","toFixed","disabled","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/finance-tracker/client/src/pages/Upload.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default function Upload() {\r\n  const [file, setFile] = useState(null);\r\n  const [preview, setPreview] = useState([]);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [fullData, setFullData] = useState([]);\r\n  const [headers, setHeaders] = useState([]);\r\n  // Updated columnMap to include two amount fields.\r\n  const [columnMap, setColumnMap] = useState({\r\n    date: '',\r\n    description: '',\r\n    amount1: '', // used for credit or the sole amount column\r\n    amount2: '', // optional; used for debit if applicable\r\n    category: ''\r\n  });\r\n  const [members, setMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMembers = async () => {\r\n      try {\r\n        const res = await axios.get('/api/household');\r\n        setMembers(res.data);\r\n      } catch (err) {\r\n        console.error('Failed to fetch members', err);\r\n      }\r\n    };\r\n    fetchMembers();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return;\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const res = await axios.post('/api/transactions/upload', formData);\r\n      // Add a blank member field for each row in the full data\r\n      const enriched = res.data.fullData.map(row => ({ ...row, member: '' }));\r\n      setPreview(res.data.preview);\r\n      setFullData(enriched);\r\n      setTotalRows(res.data.totalRows);\r\n\r\n      // Get headers from the first preview row if available\r\n      const firstRow = res.data.preview[0]?.raw || {};\r\n      setHeaders(Object.keys(firstRow));\r\n\r\n      setError('');\r\n      setSuccessMessage('');\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Upload failed. Check CSV format and try again.');\r\n    }\r\n  };\r\n\r\n  const handleMemberChange = (index, memberId) => {\r\n    const updated = [...fullData];\r\n    updated[index].member = memberId;\r\n    setFullData(updated);\r\n  };\r\n\r\n  const handleSaveAll = async () => {\r\n    try {\r\n      const res = await axios.post('/api/transactions/batch', {\r\n        transactions: fullData.map(row => {\r\n          // For the amount, we use the following logic:\r\n          // If the user mapped a second amount column (amount2), assume it holds a debit value.\r\n          // Only one of the columns will have a value.\r\n          // Otherwise, use the value from amount1 as is.\r\n          let amount;\r\n          if (columnMap.amount2) {\r\n            const credit = parseFloat(row.raw[columnMap.amount1] || 0);\r\n            const debit = parseFloat(row.raw[columnMap.amount2] || 0);\r\n            // Since only one column should have a number, choose the non-zero value and return its absolute value.\r\n            amount = credit ? Math.abs(credit) : Math.abs(debit);\r\n          } else {\r\n            // Single column: take its absolute value.\r\n            amount = Math.abs(parseFloat(row.raw[columnMap.amount1] || 0));\r\n          }\r\n          \r\n          const tx = {\r\n            date: row.raw[columnMap.date],\r\n            description: row.raw[columnMap.description],\r\n            amount: amount,\r\n            category: row.raw[columnMap.category] || 'Uncategorized',\r\n            // Use row.match for type fallback, defaulting to \"Uncategorized\"\r\n            type: row.match || 'Uncategorized',\r\n            notes: ''\r\n          };\r\n\r\n          // Add member if valid (24-character hex string)\r\n          if (row.member && /^[a-f\\d]{24}$/i.test(row.member)) {\r\n            tx.member = row.member;\r\n          }\r\n\r\n          return tx;\r\n        })\r\n      });\r\n\r\n      setSuccessMessage(res.data.message);\r\n      setError('');\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Failed to save transactions.');\r\n      setSuccessMessage('');\r\n    }\r\n  };\r\n\r\n  // Check that the mandatory mapping fields are complete.\r\n  const isMappingComplete = columnMap.date && columnMap.description && columnMap.amount1;\r\n\r\n  return (\r\n    <div className=\"text-white flex-col text-center\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Upload Transactions</h1>\r\n      <input type=\"file\" accept=\".csv\" onChange={handleFileChange} className=\"mb-4 text-gray-200\" />\r\n      <button\r\n        onClick={handleUpload}\r\n        className=\"bg-red-800 text-white px-4 py-2 rounded hover:bg-red-900 hover:shadow-lg transition duration-300 ease-in-out\"\r\n      >\r\n        Upload & Preview\r\n      </button>\r\n\r\n      {headers.length > 0 && (\r\n        <div className=\"mt-4 space-y-2\">\r\n          <h2 className=\"font-semibold\">Map Columns</h2>\r\n          {/* Map Date, Description, and Category normally */}\r\n          {['date', 'description', 'category'].map((field) => (\r\n            <div key={field} className=\"flex items-center gap-4\">\r\n              <label className=\"w-24 capitalize\">{field}:</label>\r\n              <select\r\n                value={columnMap[field]}\r\n                onChange={(e) => setColumnMap({ ...columnMap, [field]: e.target.value })}\r\n                className=\"border px-2 py-1 rounded\"\r\n              >\r\n                <option value=\"\">-- Select Column --</option>\r\n                {headers.map((header) => (\r\n                  <option key={header} value={header}>{header}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          ))}\r\n          {/* Mapping for the two amount fields */}\r\n          <div className=\"flex items-center gap-4\">\r\n            <label className=\"w-24 capitalize\">Amount 1:</label>\r\n            <select\r\n              value={columnMap.amount1}\r\n              onChange={(e) => setColumnMap({ ...columnMap, amount1: e.target.value })}\r\n              className=\"border px-2 py-1 rounded\"\r\n            >\r\n              <option value=\"\">-- Select Credit Column --</option>\r\n              {headers.map((header) => (\r\n                <option key={header} value={header}>{header}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"flex items-center gap-4\">\r\n            <label className=\"w-24 capitalize\">Amount 2:</label>\r\n            <select\r\n              value={columnMap.amount2}\r\n              onChange={(e) => setColumnMap({ ...columnMap, amount2: e.target.value })}\r\n              className=\"border px-2 py-1 rounded\"\r\n            >\r\n              <option value=\"\">-- Select Debit Column (Optional) --</option>\r\n              {headers.map((header) => (\r\n                <option key={header} value={header}>{header}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {error && <p className=\"text-red-500 mt-4\">{error}</p>}\r\n      {successMessage && <p className=\"text-green-600 mt-4\">{successMessage}</p>}\r\n\r\n      {preview.length > 0 && (\r\n        <div className=\"mt-6\">\r\n          <p className=\"font-medium text-gray-700\">\r\n            Showing preview of first {preview.length} rows (of {totalRows})\r\n          </p>\r\n          {/* Preview Table with columns: Date, Description, Amount, Category, Matched Type */}\r\n          <table className=\"w-full border mt-2 text-sm\">\r\n            <thead className=\"bg-gray-200 text-left\">\r\n              <tr>\r\n                <th className=\"p-2 border\">Date</th>\r\n                <th className=\"p-2 border\">Description</th>\r\n                <th className=\"p-2 border\">Amount</th>\r\n                <th className=\"p-2 border\">Category</th>\r\n                <th className=\"p-2 border\">Matched Type</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {preview.map((row, i) => {\r\n                const credit = parseFloat(row.raw?.[columnMap.amount1] || 0);\r\n                const debit = parseFloat(row.raw?.[columnMap.amount2] || 0);\r\n                // When two columns are mapped, use the nonzero (absolute) value.\r\n                // If only one column is mapped, take the absolute value.\r\n                const computedAmount = columnMap.amount2\r\n                  ? (credit ? Math.abs(credit) : Math.abs(debit))\r\n                  : Math.abs(parseFloat(row.raw?.[columnMap.amount1] || 0));\r\n                return (\r\n                  <tr key={i}>\r\n                    <td className=\"p-2 border\">\r\n                      {row.raw?.[columnMap.date]\r\n                        ? new Date(row.raw[columnMap.date]).toLocaleDateString()\r\n                        : 'N/A'}\r\n                    </td>\r\n                    <td className=\"p-2 border\">{row.raw?.[columnMap.description] || 'N/A'}</td>\r\n                    <td className=\"p-2 border\">\r\n                      {isNaN(computedAmount) ? 'N/A' : computedAmount.toFixed(2)}\r\n                    </td>\r\n                    <td className=\"p-2 border\">{row.raw?.[columnMap.category] || 'Uncategorized'}</td>\r\n                    <td className=\"p-2 border\">{row.match || 'Uncategorized'}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n\r\n          <div className=\"mt-4\">\r\n            <button\r\n              onClick={handleSaveAll}\r\n              disabled={!isMappingComplete}\r\n              className={`px-4 py-2 rounded text-white ${\r\n                isMappingComplete ? 'bg-green-600 hover:bg-green-700' : 'bg-gray-400 cursor-not-allowed'\r\n              }`}\r\n            >\r\n              Save All Transactions\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}